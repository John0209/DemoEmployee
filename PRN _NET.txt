DBI202:
* Relation: table, 
--> table x table : relationship
* CSDL: những data lưu trên máy tính, biểu diễn thông qua
hàng & cột
* CTDL: tổ chức và biểu diễn dữ liệu, sử dụng nhiều giải thuật
cho đến khi giải được bài toán
=========================================
- Chú ý nền tảng user use
. Net frame work Windows Only, Private Source
. Net Core --> 
// Core gôm thư viện cần dùng chung vào 1 chỗ
( Cross_platforms > ghi tren Windows Run được trên EOS,
 Open Source, Optimize memory )
. Net 6  -->
=========================================
- Lệnh cơ bản
+ Biến:
. Là 1 giá trị có thể thay đổi được
. là tên gọi tham chiếu	đến 1 vùng nhớ nào đó trong bộ nhớ
. là thành phần cốt lõi của 1 ngôn ngữ lập trình
=> why ? 
. Save date and tái sử dụng
. thao tác với bộ nhớ 1 cách dễ dàng, địa chỉ ô nhớ thường là hexa
--> tên biến ko chứa ký tự đặc biệt và có khoảng trắng
--> ko được start bằng số, ko trùng vs từ khóa
------------
+ Compiler: bôi đen tới đâu chạy chỗ đó, vừa chạy tới đâu
find error tới đó, JS
+ Intepeeter: tìm lỗi từ đầu đến cuối, C#
*** Java có cả Compiler & Intepeeter
------------
Tham trị: nắm content ko nắm address
Tham chiếu: nắm address ko nắm content --- ref
------------ *
var: declare int, phía sau phải là kiểu đó
dynamic: thoải mái kiểu nào cũng được

C# cho int = null;
. có thể cho create many class in file
C# OOP 
+ Nhược bản cũ: nhìu data dư thừa, program lớn dễ loạn vì có nhìu 
data xài chung, vẫn có tính đóng gói, data-function để chung 1 class
+ Ưu OOP: giữ data, giải quyết dư thừa, tính đóng gói
chia ra nhìu class dễ quản lý
-> Encapsulation: che chi tiết bên trong chỉ show bên ngoài, đóng gói
để an toàn data
-> Modifiers: class private

+ Internal biến: all code trong assembly đều có thể truy cập
--> Assembly: Project demoC
+ Protected: chỉ share cho những class con kế thừa
+ Property: ko chứa data, tham chiếu vào Fields, public 
ra ngoài, public int id
+ Fields: mang giá trị, ko show, chứa đối tượng, private int _id
+ Constructor: Ctrl + . để generate Constructor
------------ *
Null-Condition
a?.x 
- ?: null or not null
- ?? : default
 ( ex int[]arr =null
   arr?.Length.toString()??"Array is empty" )
------------ *
ArrayCoppy (array cần chuyển, chỉ số đầu mún chuyển, mảng nhận, size)

- Virtual: cùng tên phương thức thì overide, khi gọi p.Draw() 
sẽ gọi p class con
- có từ khóa NEW, nó sẽ auto lấy của class cha

------------ *
- Generics: định nghĩa 1 class or interface or function chấp nhận
kiểu data T nhưng chưa bit T là gì, T được truyền khi runtime
- Collection là 1 tập các đối tượng, C# cung cấp 1 loạt interface
cho user

------------ *
- Delegates: là 1 con trỏ, trỏ đến 1 hàm và nắm địa chỉa hàm đó
 . nó là kiểu ngang bằng vs class
 . Giúp truyền hàm này vào hàm khác như truyền tham số

- Anonymous MEthod: 


